
class Program
{
    static void Main(string[] args)
    {
        Console.WriteLine("Bienvenido a mi lista de Contactes");

        bool running = true;
        List<int> ids = new List<int>();
        Dictionary<int, string> names = new Dictionary<int, string>();
        Dictionary<int, string> lastnames = new Dictionary<int, string>();
        Dictionary<int, string> addresses = new Dictionary<int, string>();
        Dictionary<int, string> telephones = new Dictionary<int, string>();
        Dictionary<int, string> emails = new Dictionary<int, string>();
        Dictionary<int, int> ages = new Dictionary<int, int>();
        Dictionary<int, bool> bestFriends = new Dictionary<int, bool>();

        while (running)
        {
            Console.WriteLine(@"1. Agregar Contacto     2. Ver Contactos    3. Buscar Contactos     4. Modificar Contacto   5. Eliminar Contacto    6. Salir");
            Console.WriteLine("Digite el número de la opción deseada");

            int typeOption = Convert.ToInt32(Console.ReadLine());

            switch (typeOption)
            {
                case 1:
                    AddContact(ids, names, lastnames, addresses, telephones, emails, ages, bestFriends);
                    break;
                case 2:
                    ViewContacts(ids, names, lastnames, addresses, telephones, emails, ages, bestFriends);
                    break;
                case 3:
                    SearchContact(ids, names, lastnames, addresses, telephones, emails, ages, bestFriends);
                    break;
                case 4:
                    ModifyContact(ids, names, lastnames, addresses, telephones, emails, ages, bestFriends);
                    break;
                case 5:
                    DeleteContact(ids, names, lastnames, addresses, telephones, emails, ages, bestFriends);
                    break;
                case 6:
                    running = false;
                    break;
                default:
                    Console.WriteLine("Opción no válida, intente de nuevo.");
                    break;
            }
        }
    }

    static void AddContact(List<int> ids, Dictionary<int, string> names, Dictionary<int, string> lastnames, Dictionary<int, string> addresses, Dictionary<int, string> telephones, Dictionary<int, string> emails, Dictionary<int, int> ages, Dictionary<int, bool> bestFriends)
    {
        Console.WriteLine("Digite el nombre de la persona");
        string name = Console.ReadLine();
        Console.WriteLine("Digite el apellido de la persona");
        string lastname = Console.ReadLine();
        Console.WriteLine("Digite la dirección");
        string address = Console.ReadLine();
        Console.WriteLine("Digite el telefono de la persona");
        string phone = Console.ReadLine();
        Console.WriteLine("Digite el email de la persona");
        string email = Console.ReadLine();
        Console.WriteLine("Digite la edad de la persona en números");
        int age = Convert.ToInt32(Console.ReadLine());
        Console.WriteLine("Especifique si es mejor amigo: 1. Si, 2. No");

        bool isBestFriend = Convert.ToInt32(Console.ReadLine()) == 1;

        var id = ids.Count + 1;
        ids.Add(id);
        names.Add(id, name);
        lastnames.Add(id, lastname);
        addresses.Add(id, address);
        telephones.Add(id, phone);
        emails.Add(id, email);
        ages.Add(id, age);
        bestFriends.Add(id, isBestFriend);
    }

    static void ViewContacts(List<int> ids, Dictionary<int, string> names, Dictionary<int, string> lastnames, Dictionary<int, string> addresses, Dictionary<int, string> telephones, Dictionary<int, string> emails, Dictionary<int, int> ages, Dictionary<int, bool> bestFriends)
    {
        Console.WriteLine($"Nombre          Apellido            Dirección           Telefono            Email           Edad            Es Mejor Amigo?");
        Console.WriteLine($"____________________________________________________________________________________________________________________________");
        foreach (var id in ids)
        {
            string isBestFriendStr = (bestFriends[id]) ? "Si" : "No";
            Console.WriteLine($"{names[id]}         {lastnames[id]}         {addresses[id]}         {telephones[id]}            {emails[id]}            {ages[id]}          {isBestFriendStr}");
        }
    }

    static void SearchContact(List<int> ids, Dictionary<int, string> names, Dictionary<int, string> lastnames, Dictionary<int, string> addresses, Dictionary<int, string> telephones, Dictionary<int, string> emails, Dictionary<int, int> ages, Dictionary<int, bool> bestFriends)
    {
        Console.WriteLine("Digite el nombre del contacto que desea buscar:");
        string searchName = Console.ReadLine();

        foreach (var id in ids)
        {
            if (names[id].Equals(searchName, StringComparison.OrdinalIgnoreCase))
            {
                string isBestFriendStr = (bestFriends[id]) ? "Si" : "No";
                Console.WriteLine($"Nombre: {names[id]}, Apellido: {lastnames[id]}, Dirección: {addresses[id]}, Telefono: {telephones[id]}, Email: {emails[id]}, Edad: {ages[id]}, Es Mejor Amigo: {isBestFriendStr}");
                return;
            }
        }
        Console.WriteLine("Contacto no encontrado.");
    }

    static void ModifyContact(List<int> ids, Dictionary<int, string> names, Dictionary<int, string> lastnames, Dictionary<int, string> addresses, Dictionary<int, string> telephones, Dictionary<int, string> emails, Dictionary<int, int> ages, Dictionary<int, bool> bestFriends)
    {
        Console.WriteLine("Digite el nombre del contacto que desea modificar:");
        string searchName = Console.ReadLine();

        foreach (var id in ids)
        {
            if (names[id].Equals(searchName, StringComparison.OrdinalIgnoreCase))
            {
                Console.WriteLine("Digite el nuevo nombre de la persona");
                string name = Console.ReadLine();
                Console.WriteLine("Digite el nuevo apellido de la persona");
                string lastname = Console.ReadLine();
                Console.WriteLine("Digite la nueva dirección");
                string address = Console.ReadLine();
                Console.WriteLine("Digite el nuevo telefono de la persona");
                string phone = Console.ReadLine();
                Console.WriteLine("Digite el nuevo email de la persona");
                string email = Console.ReadLine();
                Console.WriteLine("Digite la nueva edad de la persona en números");
                int age = Convert.ToInt32(Console.ReadLine());
                Console.WriteLine("Especifique si es mejor amigo: 1. Si, 2. No");

                bool isBestFriend = Convert.ToInt32(Console.ReadLine()) == 1;

                names[id] = name;
                lastnames[id] = lastname;
                addresses[id] = address;
                telephones[id] = phone;
                emails[id] = email;
                ages[id] = age;
                bestFriends[id] = isBestFriend;

                Console.WriteLine("Contacto modificado exitosamente.");
                return;
            }
        }
        Console.WriteLine("Contacto no encontrado.");
    }

    static void DeleteContact(List<int> ids, Dictionary<int, string> names, Dictionary<int, string> lastnames, Dictionary<int, string> addresses, Dictionary<int, string> telephones, Dictionary<int, string> emails, Dictionary<int, int> ages, Dictionary<int, bool> bestFriends)
    {
        Console.WriteLine("Digite el nombre del contacto que desea eliminar:");
        string searchName = Console.ReadLine();

        foreach (var id in ids)
        {
            if (names[id].Equals(searchName, StringComparison.OrdinalIgnoreCase))
            {
                ids.Remove(id);
                names.Remove(id);
                lastnames.Remove(id);
                addresses.Remove(id);
                telephones.Remove(id);
                emails.Remove(id);
                ages.Remove(id);
                bestFriends.Remove(id);

                Console.WriteLine("Contacto eliminado exitosamente.");
                return;
            }
        }
        Console.WriteLine("Contacto no encontrado.");
    }
}
